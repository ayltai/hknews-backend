package com.github.ayltai.hknews.parser;

import com.github.ayltai.hknews.data.model.Category;
import com.github.ayltai.hknews.data.model.Item;
import com.github.ayltai.hknews.net.ApiService;
import com.github.ayltai.hknews.net.ApiServiceFactory;

import org.junit.Assert;
import org.junit.Test;
import org.mockito.Mockito;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Collection;
import java.util.stream.Collectors;

import retrofit2.Call;
import retrofit2.Response;

public final class WenWeiPoParserTest extends ParserTest {
    @Test
    public void testGetItems() throws IOException {
        final ApiServiceFactory factory = Mockito.mock(ApiServiceFactory.class);
        final ApiService        service = Mockito.mock(ApiService.class);

        Mockito.doReturn(service).when(factory).create();

        try (InputStreamReader inputStreamReader = new InputStreamReader(this.getClass().getClassLoader().getResourceAsStream("wenweipo_list.html"), "Big5")) {
            try (BufferedReader bufferedReader = new BufferedReader(inputStreamReader)) {
                final Call             call     = Mockito.mock(Call.class);
                final Response<String> response = Response.success(bufferedReader.lines().collect(Collectors.joining("\n")));

                Mockito.doReturn(call).when(service).getHtml("http://news.wenweipo.com/list_news.php?cat=000IN&instantCat=hk");
                Mockito.doReturn(response).when(call).execute();

                final Collection<Item> items = new WenWeiPoParser(factory, this.sourceRepository, this.itemRepository).getItems(new Category("http://news.wenweipo.com/list_news.php?cat=000IN&instantCat=hk", "即時港聞"));

                Assert.assertEquals("Incorrect item count", 6, items.size());
                Assert.assertEquals("Incorrect item title", "&#22283;&#38555;&#29289;&#29702;&#22887;&#36093; &#28207;&#29983;&#29554;5&#29518;&#29260;", items.iterator().next().getTitle());
            }
        }
    }

    @Test
    public void testGetItem() throws IOException {
        final ApiServiceFactory factory = Mockito.mock(ApiServiceFactory.class);
        final ApiService        service = Mockito.mock(ApiService.class);

        Mockito.doReturn(service).when(factory).create();

        try (InputStreamReader inputStreamReader = new InputStreamReader(this.getClass().getClassLoader().getResourceAsStream("wenweipo_details.html"), "Big5")) {
            try (BufferedReader bufferedReader = new BufferedReader(inputStreamReader)) {
                final Call             call     = Mockito.mock(Call.class);
                final Response<String> response = Response.success(bufferedReader.lines().collect(Collectors.joining("\n")));

                Mockito.doReturn(call).when(service).getHtml("http://news.wenweipo.com/2018/07/30/IN1807300030.htm");
                Mockito.doReturn(response).when(call).execute();

                final Item item = new Item();
                item.setUrl("http://news.wenweipo.com/2018/07/30/IN1807300030.htm");

                final Item updatedItem = new WenWeiPoParser(factory, this.sourceRepository, this.itemRepository).getItem(item);

                Assert.assertEquals("Incorrect item description", "【文匯網訊】<span >(</span><span >&#39321;&#28207;&#25991;&#21295;&#22577;</span><span >&#35352;&#32773; &#38991;&#26185;&#20625;</span><span >&nbsp;&#25991;&#26862;</span><span >)&#36889;&#19968;&#22812;，&#35199;&#27915;&#33756;&#21335;&#34903;&#34892;&#20154;&#23560;&#29992;&#21312;&#36924;&#28415;&#34903;&#38957;&#34269;&#20154;，&#21560;&#24341;&#22823;&#25209;&#24066;&#27665;&#22285;&#35264;，&#22240;&#28858;&#36889;&#26159;&#26368;&#24460;&#19968;&#27425;「&#21185;&#27468;&#29105;&#33310;&#20170;&#26202;&#22812;」，&#29105;&#39719;&#22580;&#38754;&#22312;&#26202;&#19978;10&#26178;&#24460;&#23559;&#19981;&#24489;&#35211;。&#19981;&#23569;&#20154;&#37117;&#25226;&#25569;&#26368;&#24460;&#27231;&#26371;，&#21040;&#22580;&#35211;&#35657;&#23560;&#29992;&#21312;&#27491;&#24335;「&#33853;&#24149;」&#19968;&#21051;。&#26377;&#22312;&#34903;&#19978;&#34920;&#28436;&#22810;&#24180;&#30340;&#34269;&#20154;&#34920;&#31034;，&#38614;&#28982;&#23565;&#26410;&#33021;&#32380;&#32396;&#22312;&#35442;&#34389;&#34920;&#28436;&#24863;&#21040;&#19981;&#25448;，&#20294;&#35469;&#28858;&#34892;&#20154;&#23560;&#29992;&#21312;&#24050;&#32147;&#35722;&#36074;，&#23565;&#38468;&#36817;&#21830;&#25142;&#21450;&#23621;&#27665;&#20134;&#36896;&#25104;&#28363;&#25854;，&#35469;&#21516;&#25919;&#24220;「&#27578;&#34903;」&#27770;&#23450;。</span><br><br>&#29305;&#21312;&#25919;&#24220;&#26412;&#26376;&#24050;&#27491;&#24335;&#21002;&#25010;，8&#26376;4&#26085;(&#21608;&#20845;)&#27491;&#24335;「&#27578;&#34903;」&#33853;&#23526;&#21462;&#28040;&#35442;&#34892;&#20154;&#23560;&#29992;&#21312;，&#24847;&#21619;&#26152;&#26085;(&#21608;&#26085;)&#26371;&#26159;&#34920;&#28436;&#32773;&#22312;&#34892;&#20154;&#23560;&#29992;&#21312;&#36617;&#27468;&#36617;&#33310;&#30340;&#26368;&#24460;&#19968;&#22812;。<br><br>&#26377;&#34903;&#38957;&#34269;&#20154;&#26089;&#22312;&#20013;&#21320;&#21069;&#24050;&#32147;&#21040;&#22580;&#38712;&#20301;&#28310;&#20633;&#34920;&#28436;，&#22312;&#35199;&#27915;&#33756;&#21335;&#34903;&#34920;&#28436;&#36229;&#36942;10&#24180;&#30340;「Sing A Song」 &#36000;&#36012;&#20154;&#26446;&#23567;&#22992;&#34920;&#31034;，&#23565;&#34892;&#20154;&#23560;&#29992;&#21312;&#34987;&#21462;&#28040;&#24863;&#21040;&#19981;&#25448;，&#20294;&#26368;&#24460;&#19968;&#26202;&#20134;&#26371;&#32380;&#32396;&#22914;&#24120;&#34920;&#28436;，&#20006;&#29305;&#21029;&#35531;&#20358;&#40643;&#22799;&#34137;&#31561;&#34269;&#20154;&#20219;&#22025;&#36051;。<br><br><strong>「&#26085;&#24460;&#22312;&#23627;&#37032;&#21809;&#27468;&#32102;&#32769;&#20154;&#23478;&#32893;」</strong><br><br>&#22833;&#21435;&#34920;&#28436;&#22810;&#24180;&#30340;「&#33310;&#21488;」，&#26446;&#23567;&#22992;&#30452;&#35328;&#23565;&#23559;&#20358;&#26410;&#20316;&#25171;&#31639;，&#19981;&#30693;&#36947;&#26085;&#24460;&#26371;&#21542;&#32380;&#32396;&#21443;&#33287;&#34903;&#38957;&#34920;&#28436;，「&#25105;&#20497;&#21482;&#26159;&#30070;&#29609;，&#19981;&#26159;&#38752;&#21809;&#27468;&#25497;&#37666;，&#20294;&#26085;&#24460;&#20173;&#26371;&#20570;&#32681;&#24037;，&#22312;&#23627;&#37032;&#21809;&#27468;&#32102;&#32769;&#20154;&#23478;&#32893;。」&#20760;&#31649;「&#27578;&#34903;」&#23565;&#26446;&#23567;&#22992;&#24118;&#20358;&#24433;&#38911;，&#20294;&#22905;&#20134;&#34920;&#31034;&#35469;&#21516;&#25919;&#24220;&#30340;&#27770;&#23450;。&#22905;&#25351;&#20170;&#26085;&#30340;&#35199;&#27915;&#33756;&#21335;&#34903;&#36319;&#26368;&#21021;&#25104;&#28858;&#34892;&#20154;&#23560;&#29992;&#21312;&#26178;&#26377;&#24456;&#22823;&#36681;&#35722;，&#34903;&#38957;&#34269;&#20154;&#30340;&#25976;&#37327;&#22823;&#24133;&#22686;&#21152;，&#19981;&#23569;&#20154;&#34920;&#28436;&#30340;&#30446;&#30340;&#21482;&#26159;&#25497;&#37666;，&#22240;&#32780;&#36896;&#25104;&#22122;&#38899;&#21839;&#38988;，&#22580;&#38754;&#21313;&#20998;&#28151;&#20098;。<br><br>&#19981;&#23569;&#24066;&#27665;&#26152;&#26085;&#20134;&#29305;&#22320;&#21040;&#22580;&#25079;&#32236;&#19968;&#30058;，&#35199;&#27915;&#33756;&#21335;&#34903;&#26356;&#26159;&#24840;&#22812;&#24840;&#29105;&#39719;，&#26377;&#20154;&#26356;&#24118;&#20633;&#38275;&#20809;&#26834;&#27427;&#36062;&#19968;&#30526;&#34903;&#38957;&#34269;&#20154;&#22312;&#35199;&#27915;&#33756;&#21335;&#34903;&#30340;&#21578;&#21029;&#28436;&#21809;&#26371;，&#20006;&#33287;&#20182;&#20497;&#19968;&#21516;&#36617;&#27468;&#36617;&#33310;。<br><br>&#34157;&#20808;&#29983;&#25351;&#33258;&#24049;&#24179;&#26085;&#32147;&#24120;&#21040;&#26106;&#35282;&#34892;&#34903;，&#23565;&#34892;&#20154;&#23560;&#29992;&#21312;&#34987;&#21462;&#28040;&#24863;&#21040;&#21487;&#24796;，&#20294;&#20134;&#35469;&#21516;&#35201;&#21462;&#28040;&#34892;&#20154;&#23560;&#29992;&#21312;，「『&#27578;&#34903;』&#26159;&#28961;&#21487;&#36991;&#20813;，&#21809;&#27468;、&#24433;&#30456;&#30340;&#30906;&#26371;&#24433;&#38911;&#38468;&#36817;&#23621;&#27665;&#21450;&#21830;&#25142;，&#32780;&#19988;&#22122;&#38899;&#21839;&#38988;&#20134;&#38627;&#20316;&#35215;&#31649;，&#25152;&#20197;&#35201;&#23559;&#20182;&#20497;&#36245;&#36208;&#20134;&#26159;&#21487;&#20197;&#29702;&#35299;。」<br><br><strong>&#37912;&#37686;&#24107;&#20613;&#34987;&#22122;&#38899;&#21557;&#33267;&#38957;&#26248;</strong><br><br>&#22312;&#35199;&#27915;&#33756;&#21335;&#34903;&#20462;&#29702;&#37912;&#37686;40&#24180;&#30340;&#20613;&#20808;&#29983;&#27489;&#36814;&#21462;&#28040;&#34892;&#20154;&#23560;&#29992;&#21312;&#30340;&#27770;&#23450;，&#20182;&#25351;&#34903;&#38957;&#34269;&#20154;&#35069;&#36896;&#30340;&#32882;&#28010;&#22823;，&#19981;&#21516;&#34269;&#20154;&#20043;&#38291;&#20284;&#26159;&#39717;&#22823;&#32882;，&#19981;&#21934;&#24433;&#38911;&#20182;&#33287;&#23458;&#20154;&#28317;&#36890;，&#26356;&#20196;&#20182;&#32147;&#24120;&#24863;&#21040;&#38957;&#26248;，&#29978;&#33267;&#26366;&#32147;&#22240;&#32780;&#35201;&#21484;&#25937;&#35703;&#36554;。<br><br>&#36939;&#36664;&#32626;&#26159;&#22312;2000&#24180;&#23559;&#35199;&#27915;&#33756;&#21335;&#34903;&#21123;&#28858;&#34892;&#20154;&#23560;&#29992;&#21312;，&#21407;&#24847;&#26159;&#32019;&#32233;&#35442;&#34389;&#30340;&#31354;&#27683;&#27745;&#26579;&#21450;&#25913;&#21892;&#20154;&#36554;&#29229;&#36335;&#30340;&#24773;&#27841;，&#20294;&#20043;&#24460;&#21560;&#24341;&#22823;&#25209;&#34903;&#38957;&#34269;&#20154;&#36914;&#39376;，&#28858;&#38468;&#36817;&#23621;&#27665;&#21450;&#21830;&#25142;&#24118;&#20358;&#22122;&#38899;&#21839;&#38988;，&#36939;&#36664;&#32626;&#22240;&#32780;&#22312;2014&#24180;&#28187;&#23569;&#34892;&#20154;&#23560;&#29992;&#21312;&#38283;&#25918;&#26178;&#38291;，&#30001;&#27599;&#26085;&#38283;&#25918;&#25913;&#28858;&#21482;&#22312;&#21608;&#26411;&#21608;&#26085;&#38283;&#25918;。<br><br>&#19981;&#36942;，&#35199;&#27915;&#33756;&#21335;&#34903;&#30340;&#22122;&#38899;&#21839;&#38988;&#20173;&#28982;&#26410;&#29554;&#25913;&#21892;，&#27833;&#23574;&#26106;&#21312;&#35696;&#26371;&#26089;&#21069;&#36890;&#36942;&#21462;&#28040;&#26106;&#35282;&#34892;&#20154;&#23560;&#29992;&#21312;&#21205;&#35696;，&#36939;&#36664;&#32626;&#26089;&#21069;&#20134;&#21002;&#25010;，&#33853;&#23526;&#22312;8&#26376;4&#26085;&#25764;&#22238;&#35199;&#27915;&#33756;&#21335;&#34903;&#34892;&#20154;&#23560;&#29992;&#21312;&#30340;&#20351;&#29992;&#27402;。<br><br><strong>&#26377;&#20154;&#36681;&#22580;&#23574;&#27801;&#21632; &#28023;&#28657;&#22996;&#26371;：&#30535;&#23450;&#21874;</strong><br><br>&#26106;&#35282;&#35199;&#27915;&#33756;&#21335;&#34903;&#34892;&#20154;&#23560;&#29992;&#21312;&#21462;&#28040;&#24460;，&#34920;&#28436;&#32773;&#20309;&#21435;&#20309;&#24478;&#65311;&#26377;&#21312;&#35696;&#21729;&#26366;&#24314;&#35696;，&#29305;&#21312;&#25919;&#24220;、&#34269;&#30332;&#23616;&#21450;&#35199;&#20061;&#31649;&#29702;&#23616;&#21487;&#29309;&#38957;，&#22312;&#35199;&#20061;&#25991;&#21270;&#21312;&#35373;&#31435;「&#34269;&#34899;&#34920;&#28436;&#21312;」，&#20197;&#23433;&#32622;&#34920;&#28436;&#32773;。&#32780;&#23565;&#26044;&#26377;&#34920;&#28436;&#32773;&#36681;&#22580;&#21040;&#23574;&#27801;&#21632;&#28023;&#28657;&#34920;&#28436;，&#28023;&#28657;&#20107;&#21209;&#22996;&#21729;&#26371;&#26032;&#20219;&#20027;&#24109;&#21555;&#27704;&#38918;&#34920;&#31034;，&#26371;&#30041;&#24847;&#20107;&#20214;&#30332;&#23637;，&#30740;&#31350;&#23559;&#20358;&#26159;&#21542;&#35215;&#31649;。<br><br>&#26152;&#26202;&#26159;&#26106;&#35282;&#34892;&#20154;&#23560;&#29992;&#21312;&#26368;&#24460;&#19968;&#26202;&#38283;&#25918;，&#19981;&#23569;&#20154;&#34920;&#31034;&#27489;&#36814;，&#20294;&#20063;&#26377;&#20154;&#24863;&#21040;&#20381;&#20381;&#19981;&#25448;，&#24076;&#26395;&#21487;&#20197;&#20877;&#27427;&#36062;&#19968;&#20123;&#34920;&#28436;&#32773;&#30340;&#28436;&#20986;。&#26089;&#21069;&#27833;&#23574;&#26106;&#21312;&#35696;&#26371;&#38283;&#26371;&#35342;&#35542;&#26377;&#38364;&#23433;&#25490;&#26178;，&#26377;&#21312;&#35696;&#21729;&#25552;&#20986;&#21487;&#23433;&#25490;&#20854;&#20182;&#22320;&#26041;&#20379;&#34920;&#28436;&#32773;&#28436;&#20986;。<br><br>&#21312;&#35696;&#21729;&#38515;&#23569;&#26848;&#34920;&#31034;，&#25903;&#25345;&#21462;&#28040;&#34892;&#20154;&#23560;&#29992;&#21312;，&#24418;&#23481;&#35201;&#27714;&#21462;&#28040;&#23560;&#29992;&#21312;&#29494;&#22914;「18&#24180;&#25239;&#25136;」，「&#27578;&#34903;」&#26377;&#22914;「&#37325;&#20809;&#32000;&#24565;&#26085;」，&#20196;&#23621;&#27665;&#37325;&#29554;&#23527;&#38748;，&#20294;&#20182;&#20134;&#24076;&#26395;&#25919;&#24220;&#21487;&#21332;&#21161;&#34920;&#28436;&#32773;&#29289;&#33394;&#20854;&#20182;&#34920;&#28436;&#22320;&#26041;，&#24314;&#35696;&#21487;&#32771;&#24942;&#22312;&#35199;&#20061;&#25991;&#21270;&#21312;&#35373;&#34920;&#28436;&#21312;。<br><br>&#21312;&#35696;&#21729;&#20167;&#25391;&#36637;&#20134;&#24418;&#23481;&#26032;&#25514;&#26045;&#26159;「&#36978;&#20358;&#30340;&#26149;&#22825;」，&#24314;&#35696;&#25919;&#24220;、&#34269;&#30332;&#23616;&#21450;&#35199;&#20061;&#31649;&#29702;&#23616;&#29309;&#38957;，&#22312;&#35199;&#20061;&#25991;&#21270;&#21312;&#35373;&#31435;「&#34269;&#34899;&#34920;&#28436;&#21312;」，&#23433;&#32622;&#34920;&#28436;&#32773;。<br><br><strong>&#28023;&#28657;&#26371;&#32771;&#24942;&#20316;&#36969;&#30070;&#31649;&#29702;</strong><br><br>&#21555;&#27704;&#38918;&#26152;&#26085;&#25509;&#21463;&#38651;&#35222;&#31680;&#30446;&#35370;&#21839;&#26178;&#34920;&#31034;，&#28023;&#28657;&#38656;&#35201;&#26377;&#19981;&#21516;&#27963;&#21205;，&#34903;&#38957;&#34920;&#28436;&#21463;&#31038;&#26371;&#27489;&#36814;，&#20294;&#39321;&#28207;&#20154;&#21475;&#23494;&#38598;，&#25110;&#38656;&#35201;&#19968;&#23450;&#31243;&#24230;&#30340;&#31649;&#29702;，&#35222;&#20046;&#20160;&#40636;&#22320;&#26041;&#21450;&#27963;&#21205;，&#21542;&#21063;「&#24456;&#22810;&#20107;&#21435;&#24471;&#22826;&#30433;，&#29289;&#26997;&#24517;&#21453;，&#23601;&#21487;&#33021;&#22833;&#21435;&#26412;&#36523;&#24847;&#32681;」。<br><br>&#23565;&#26044;&#26377;&#34920;&#28436;&#32773;&#36681;&#22580;&#21040;&#23574;&#27801;&#21632;&#28023;&#28657;&#34920;&#28436;，&#21555;&#27704;&#38918;&#30456;&#20449;，&#23574;&#27801;&#21632;&#28023;&#28657;&#36960;&#38626;&#27665;&#23621;，&#21363;&#20351;&#34920;&#28436;&#36896;&#25104;&#24178;&#25854;，&#24433;&#38911;&#30456;&#23565;&#36611;&#23567;，&#26371;&#30041;&#24847;&#26410;&#20358;&#30332;&#23637;，&#20877;&#21521;&#25919;&#24220;&#25552;&#20132;&#24847;&#35211;。<br><br>&#20182;&#21448;&#35469;&#28858;，&#26085;&#24460;&#22914;&#38656;&#31649;&#29702;，&#20006;&#38750;&#23559;&#28023;&#28657;&#30070;&#25104;&#31649;&#29702;&#20844;&#22290;&#33324;&#35373;&#35576;&#22810;&#38480;&#21046;，&#32780;&#26159;&#35330;&#19979;&#21478;&#19968;&#22871;&#21407;&#21063;，&#22914;&#19981;&#21516;&#22320;&#27573;&#26377;&#19981;&#21516;&#27963;&#21205;，&#26410;&#20358;&#26371;&#38598;&#20013;&#30740;&#31350;&#25033;&#21542;&#30332;&#29260;&#35215;&#31649;。<br><br>", updatedItem.getDescription());
                Assert.assertEquals("Incorrect image count", 2, updatedItem.getImages().size());
                Assert.assertEquals("Incorrect image description", "&#24066;&#27665;&#29305;&#22320;&#21040;&#26106;&#35282;&#34892;&#20154;&#23560;&#21312;&#25293;&#29031;&#30041;&#24565;。 &#39321;&#28207;&#25991;&#21295;&#22577;&#35352;&#32773;&#24429;&#23376;&#25991; &#25885;", updatedItem.getImages().get(0).getDescription());
                Assert.assertEquals("Incorrect image URL", "http://image.wenweipo.com/2018/07/30/a01a.jpg", updatedItem.getImages().get(0).getImageUrl());
            }
        }
    }
}
